package isa

var InstToString = map[InstructionType]string {
	INST_PUSH: "PUSH",
	INST_POP: "POP",
	INST_ADD: "ADD",
	INST_MINUS: "MINUS",
	INST_MUL: "MUL",
	INST_DIV: "DIV",
	INST_EQ: "EQ",
	INST_NEQ: "NEQ",
	INST_LS: "LS",
	INST_GR: "GR",
	INST_GREQ: "GREQ",
	INST_LSEQ: "LSEQ",
	INST_DUP: "DUP",
	INST_JMP: "JMP",
	INST_JMPZ: "JMPZ",
	INST_SWAP: "SWAP",
	INST_STORE: "STORE",
	INST_LOAD: "LOAD",
	INST_CALL: "CALL",
	INST_RETURN: "RETURN",
	INST_HALT: "HALT",
	INST_NONE: "NONE",
}

var InstHasOperand = map[InstructionType]bool {
	INST_PUSH: true,
	INST_POP: false,
	INST_ADD: false,
	INST_MINUS: false,
	INST_MUL: false,
	INST_DIV: false,
	INST_EQ: false,
	INST_NEQ: false,
	INST_LS: false,
	INST_GR: false,
	INST_GREQ: false,
	INST_LSEQ: false,
	INST_DUP: false,
	INST_JMP: true,
	INST_JMPZ: true,
	INST_SWAP: false,
	INST_STORE: true,
	INST_LOAD: true,
	INST_CALL: true,
	INST_RETURN: false,
	INST_HALT: false,
	INST_NONE: false,
}

var StringToInst = map[string]InstructionType {
	"PUSH": INST_PUSH,
	"POP": INST_POP,
	"ADD": INST_ADD,
	"MINUS": INST_MINUS,
	"MUL": INST_MUL,
	"DIV": INST_DIV,
	"EQ": INST_EQ,
	"NEQ": INST_NEQ,
	"LS": INST_LS,
	"GR": INST_GR,
	"GREQ": INST_GREQ,
	"LSEQ": INST_LSEQ,
	"DUP": INST_DUP,
	"JMP": INST_JMP,
	"JMPZ": INST_JMPZ,
	"SWAP": INST_SWAP,
	"STORE": INST_STORE,
	"LOAD": INST_LOAD,
	"CALL": INST_CALL,
	"RETURN": INST_RETURN,
	"HALT": INST_HALT,
	"NONE": INST_NONE,
}
